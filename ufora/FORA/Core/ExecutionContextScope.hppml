#pragma once

namespace Fora {
namespace Interpreter {

class ExecutionContext;

/**********
ExecutionContextScope

A stack-based object used to track whether an ExecutionContext is in the interpreter
or the compiler.  It assumes that you push scopes onto the stack in alternating order 
of compiled and interpreted code.
**********/

class ExecutionContextScope {
public:
		enum {
			interpreter = true,
			machineCode = false
			};
		
		ExecutionContextScope(ExecutionContext& inContext, bool isInInterpreter);
		~ExecutionContextScope();
private:
		ExecutionContext& 	mContext;
		ExecutionContextScope*	mEnclosingScope;
		double					mTimerClockStart;
		bool					mIsInInterpreter;
};

}
}